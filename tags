!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BDEVNAME_SIZE	dmz.h	34;"	d
DEVICE_NAME_SIZE	dmz.h	37;"	d
DEV_CAPACITY	dmz.h	35;"	d
DMZ_BLOCK_MASK	dmz.h	44;"	d
DMZ_BLOCK_MASK_BITS	dmz.h	48;"	d
DMZ_BLOCK_SECTORS	dmz.h	51;"	d
DMZ_BLOCK_SECTORS_MASK	dmz.h	52;"	d
DMZ_BLOCK_SECTORS_SHIFT	dmz.h	50;"	d
DMZ_BLOCK_SHIFT	dmz.h	42;"	d
DMZ_BLOCK_SHIFT_BITS	dmz.h	46;"	d
DMZ_BLOCK_SIZE	dmz.h	43;"	d
DMZ_BLOCK_SIZE_BITS	dmz.h	47;"	d
DMZ_H	dmz.h	12;"	d
DMZ_META_DIRTY	dmz-metadata.c	/^enum { DMZ_META_DIRTY,$/;"	e	enum:__anon1	file:
DMZ_META_ERROR	dmz-metadata.c	/^       DMZ_META_ERROR,$/;"	e	enum:__anon1	file:
DMZ_META_READING	dmz-metadata.c	/^       DMZ_META_READING,$/;"	e	enum:__anon1	file:
DMZ_META_WRITING	dmz-metadata.c	/^       DMZ_META_WRITING,$/;"	e	enum:__anon1	file:
DMZ_ZONE_BLOCKS_SHIFT	dmz.h	54;"	d
GB	dmz.h	32;"	d
KB	dmz.h	30;"	d
KDIR	Makefile	/^KDIR ?= \/lib\/modules\/`uname -r`\/build$/;"	m
MB	dmz.h	31;"	d
ZONE_SIZE	dmz.h	36;"	d
bdev	dmz.h	/^	struct block_device *bdev;$/;"	m	struct:dmz_dev	typeref:struct:dmz_dev::block_device
bio	dmz-target.c	/^	struct bio *bio;$/;"	m	struct:dmz_bioctx	typeref:struct:dmz_bioctx::bio	file:
bitmap	dmz.h	/^	unsigned long *bitmap;$/;"	m	struct:dm_zone
bitmap_block	dmz.h	/^	sector_t bitmap_block;$/;"	m	struct:dmz_metadata
bitmap_size	dmz.h	/^	sector_t bitmap_size;$/;"	m	struct:dmz_metadata
bitmap_start	dmz.h	/^	unsigned long *bitmap_start;$/;"	m	struct:dmz_metadata
block	dmz.h	/^	sector_t block;$/;"	m	struct:dmz_sb
block_id	dmz.h	/^	__le64 block_id;$/;"	m	struct:dmz_map
capacity	dmz.h	/^	sector_t capacity;$/;"	m	struct:dmz_dev
capacity	dmz.h	/^	u64 capacity;$/;"	m	struct:dmz_metadata
ccflags-y	Makefile	/^ccflags-y := -std=gnu99 -Wno-declaration-after-statement$/;"	m
crc	dmz-metadata.c	/^	__le32 crc; \/*  48 *\/$/;"	m	struct:dmz_super	file:
data	dmz-metadata.c	/^	void *data;$/;"	m	struct:dmz_mblk	file:
ddev	dmz.h	/^	struct dm_dev *ddev;$/;"	m	struct:dmz_target	typeref:struct:dmz_target::dm_dev
dev	dmz-target.c	/^	struct dmz_dev *dev;$/;"	m	struct:dmz_bioctx	typeref:struct:dmz_bioctx::dmz_dev	file:
dev	dmz.h	/^	struct dmz_dev *dev;$/;"	m	struct:dmz_metadata	typeref:struct:dmz_metadata::dmz_dev
dev	dmz.h	/^	struct dmz_dev *dev;$/;"	m	struct:dmz_sb	typeref:struct:dmz_sb::dmz_dev
dev	dmz.h	/^	struct dmz_dev *dev;$/;"	m	struct:dmz_target	typeref:struct:dmz_target::dmz_dev
dev_uuid	dmz-metadata.c	/^	u8 dev_uuid[16]; \/* 112 *\/$/;"	m	struct:dmz_super	file:
dm_zone	dmz.h	/^struct dm_zone {$/;"	s
dmz_alloc_mblk	dmz-metadata.c	/^struct dmz_mblk *dmz_alloc_mblk(void) {$/;"	f
dmz_bio_block	dmz.h	62;"	d
dmz_bio_blocks	dmz.h	63;"	d
dmz_bioctx	dmz-target.c	/^struct dmz_bioctx {$/;"	s	file:
dmz_blk2sect	dmz.h	59;"	d
dmz_ctr	dmz-target.c	/^static int dmz_ctr(struct dm_target *ti, unsigned int argc, char **argv) {$/;"	f	file:
dmz_ctr_metadata	dmz-metadata.c	/^int dmz_ctr_metadata(struct dmz_target *dmz) {$/;"	f
dmz_ctr_reclaim	dmz-reclaim.c	/^int dmz_ctr_reclaim(void) {$/;"	f
dmz_dev	dmz.h	/^struct dmz_dev {$/;"	s
dmz_dtr	dmz-target.c	/^static void dmz_dtr(struct dm_target *ti) {$/;"	f	file:
dmz_dtr_metadata	dmz-metadata.c	/^void dmz_dtr_metadata(struct dmz_metadata *zmd) {$/;"	f
dmz_exit	dmz-target.c	/^module_exit(dmz_exit);$/;"	v
dmz_exit	dmz-target.c	/^static void __exit dmz_exit(void) {$/;"	f	file:
dmz_first_free_block	dmz-target.c	/^sector_t dmz_first_free_block(struct dmz_metadata *zmd) {$/;"	f
dmz_fixup_device	dmz-target.c	/^static int dmz_fixup_device(struct dm_target *ti) {$/;"	f	file:
dmz_free_mblk	dmz-metadata.c	/^void dmz_free_mblk(struct dmz_mblk *mblk) {$/;"	f
dmz_get_mblk	dmz-metadata.c	/^struct dmz_mblk *dmz_get_mblk(struct dmz_metadata *zmd, sector_t start_no) {$/;"	f
dmz_get_metadata	dmz-metadata.c	/^int dmz_get_metadata(struct dmz_metadata *zmd) {$/;"	f
dmz_get_zoned_device	dmz-target.c	/^static int dmz_get_zoned_device(struct dm_target *ti, char *path, struct dmz_dev *dev) {$/;"	f	file:
dmz_init	dmz-target.c	/^module_init(dmz_init);$/;"	v
dmz_init	dmz-target.c	/^static int __init dmz_init(void) {$/;"	f	file:
dmz_invalidate_blocks	dmz-target.c	/^int dmz_invalidate_blocks(struct dmz_metadata *zmd, sector_t start, sector_t len) {$/;"	f
dmz_io_hints	dmz-target.c	/^static void dmz_io_hints(struct dm_target *ti, struct queue_limits *limits) {$/;"	f	file:
dmz_iterate_devices	dmz-target.c	/^static int dmz_iterate_devices(struct dm_target *ti, iterate_devices_callout_fn fn, void *data) {$/;"	f	file:
dmz_label	dmz-metadata.c	/^	u8 dmz_label[32]; \/*  80 *\/$/;"	m	struct:dmz_super	file:
dmz_load_bitmap	dmz-metadata.c	/^unsigned long *dmz_load_bitmap(struct dmz_metadata *zmd) {$/;"	f
dmz_load_map	dmz-metadata.c	/^struct dmz_map *dmz_load_map(struct dmz_metadata *zmd) {$/;"	f
dmz_load_zones	dmz-metadata.c	/^struct dm_zone *dmz_load_zones(struct dmz_metadata *zmd, unsigned long *bitmap) {$/;"	f
dmz_map	dmz-target.c	/^static int dmz_map(struct dm_target *ti, struct bio *bio) {$/;"	f	file:
dmz_map	dmz.h	/^struct dmz_map {$/;"	s
dmz_mblk	dmz-metadata.c	/^struct dmz_mblk {$/;"	s	file:
dmz_mblk_bio_end_io	dmz-metadata.c	/^void dmz_mblk_bio_end_io(struct bio *bio) {$/;"	f
dmz_message	dmz-target.c	/^static int dmz_message(struct dm_target *ti, unsigned int argc, char **argv, char *result, unsigned int maxlen) {$/;"	f	file:
dmz_metadata	dmz.h	/^struct dmz_metadata {$/;"	s
dmz_prepare_ioctl	dmz-target.c	/^static int dmz_prepare_ioctl(struct dm_target *ti, struct block_device **bdev) {$/;"	f	file:
dmz_put_zoned_device	dmz-target.c	/^static void dmz_put_zoned_device(struct dm_target *ti) {$/;"	f	file:
dmz_resume	dmz-target.c	/^static void dmz_resume(struct dm_target *ti) {$/;"	f	file:
dmz_sb	dmz.h	/^struct dmz_sb {$/;"	s
dmz_sect2blk	dmz.h	60;"	d
dmz_status	dmz-target.c	/^static void dmz_status(struct dm_target *ti, status_type_t type, unsigned int status_flags, char *result, unsigned int maxlen) {$/;"	f	file:
dmz_super	dmz-metadata.c	/^struct dmz_super {$/;"	s	file:
dmz_suspend	dmz-target.c	/^static void dmz_suspend(struct dm_target *ti) {$/;"	f	file:
dmz_target	dmz.h	/^struct dmz_target {$/;"	s
dmz_type	dmz-target.c	/^static struct target_type dmz_type = {$/;"	v	typeref:struct:target_type	file:
dmz_uuid	dmz-metadata.c	/^	u8 dmz_uuid[16]; \/*  96 *\/$/;"	m	struct:dmz_super	file:
flags	dmz.h	/^	unsigned int flags;$/;"	m	struct:dmz_target
gen	dmz-metadata.c	/^	__le64 gen; \/*  16 *\/$/;"	m	struct:dmz_super	file:
magic	dmz-metadata.c	/^	__le32 magic; \/*   4 *\/$/;"	m	struct:dmz_super	file:
map_block	dmz.h	/^	sector_t map_block;$/;"	m	struct:dmz_metadata
map_start	dmz.h	/^	struct dmz_map *map_start;$/;"	m	struct:dmz_metadata	typeref:struct:dmz_metadata::dmz_map
mapping_size	dmz.h	/^	sector_t mapping_size;$/;"	m	struct:dmz_metadata
mblk	dmz.h	/^	struct dmz_mblk *mblk;$/;"	m	struct:dmz_sb	typeref:struct:dmz_sb::dmz_mblk
modname	Makefile	/^modname ?= dm-zoned$/;"	m
name	dmz.h	/^	char name[BDEVNAME_SIZE];$/;"	m	struct:dmz_dev
name	dmz.h	/^	char name[BDEVNAME_SIZE];$/;"	m	struct:dmz_metadata
nr_bitmap_blocks	dmz-metadata.c	/^	__le32 nr_bitmap_blocks; \/*  44 *\/$/;"	m	struct:dmz_super	file:
nr_bitmap_blocks	dmz.h	/^	sector_t nr_bitmap_blocks;$/;"	m	struct:dmz_metadata
nr_blocks	dmz.h	/^	sector_t nr_blocks;$/;"	m	struct:dmz_metadata
nr_chunks	dmz-metadata.c	/^	__le32 nr_chunks; \/*  36 *\/$/;"	m	struct:dmz_super	file:
nr_map_blocks	dmz-metadata.c	/^	__le32 nr_map_blocks; \/*  40 *\/$/;"	m	struct:dmz_super	file:
nr_map_blocks	dmz.h	/^	sector_t nr_map_blocks;$/;"	m	struct:dmz_metadata
nr_maps	dmz.h	/^	sector_t nr_maps;$/;"	m	struct:dmz_metadata
nr_meta_blocks	dmz-metadata.c	/^	__le32 nr_meta_blocks; \/*  28 *\/$/;"	m	struct:dmz_super	file:
nr_reserved_seq	dmz-metadata.c	/^	__le32 nr_reserved_seq; \/*  32 *\/$/;"	m	struct:dmz_super	file:
nr_zone_sectors	dmz.h	/^	sector_t nr_zone_sectors;$/;"	m	struct:dmz_dev
nr_zones	dmz.h	/^	sector_t nr_zones;$/;"	m	struct:dmz_metadata
nr_zones	dmz.h	/^	unsigned int nr_zones;$/;"	m	struct:dmz_dev
obj-m	Makefile	/^obj-m  := $(modname).o$/;"	m
page	dmz-metadata.c	/^	struct page *page;$/;"	m	struct:dmz_mblk	typeref:struct:dmz_mblk::page	file:
ref	dmz-metadata.c	/^	unsigned int ref;$/;"	m	struct:dmz_mblk	file:
ref	dmz-target.c	/^	refcount_t ref;$/;"	m	struct:dmz_bioctx	file:
reserved	dmz-metadata.c	/^	u8 reserved[400]; \/* 512 *\/$/;"	m	struct:dmz_super	file:
sb	dmz.h	/^	struct dmz_super *sb;$/;"	m	struct:dmz_metadata	typeref:struct:dmz_metadata::dmz_super
sb	dmz.h	/^	struct dmz_super *sb;$/;"	m	struct:dmz_sb	typeref:struct:dmz_sb::dmz_super
sb_block	dmz-metadata.c	/^	__le64 sb_block; \/*  24 *\/$/;"	m	struct:dmz_super	file:
sb_block	dmz.h	/^	sector_t sb_block;$/;"	m	struct:dmz_metadata
sourcelist	Makefile	/^sourcelist ?= dmz-target.o dmz-metadata.o dmz-reclaim.o$/;"	m
state	dmz-metadata.c	/^	unsigned long state;$/;"	m	struct:dmz_mblk	file:
super_block_info	dmz.h	/^	struct dmz_sb super_block_info;$/;"	m	struct:dmz_metadata	typeref:struct:dmz_metadata::dmz_sb
version	dmz-metadata.c	/^	__le32 version; \/*   8 *\/$/;"	m	struct:dmz_super	file:
weight	dmz.h	/^	unsigned int weight;$/;"	m	struct:dm_zone
wp	dmz.h	/^	unsigned int wp;$/;"	m	struct:dm_zone
zmd	dmz.h	/^	struct dmz_metadata *zmd;$/;"	m	struct:dmz_target	typeref:struct:dmz_target::dmz_metadata
zone	dmz-target.c	/^	struct dm_zone *zone;$/;"	m	struct:dmz_bioctx	typeref:struct:dmz_bioctx::dm_zone	file:
zone	dmz.h	/^	struct dm_zone *zone;$/;"	m	struct:dmz_sb	typeref:struct:dmz_sb::dm_zone
zone_nr_blocks	dmz.h	/^	sector_t zone_nr_blocks;$/;"	m	struct:dmz_metadata
zone_nr_sectors	dmz.h	/^	sector_t zone_nr_sectors;$/;"	m	struct:dmz_metadata
zone_start	dmz.h	/^	struct dm_zone *zone_start;$/;"	m	struct:dmz_metadata	typeref:struct:dmz_metadata::dm_zone
